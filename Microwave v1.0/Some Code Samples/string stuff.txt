private bool is_empty(string str, string name)
        {
            if (str == "")
            {
                lbl_message.ForeColor = Color.Red;
                lbl_message.Text = "Please enter your " + name + ".";
                return true;
            }

            return false;
        }

        private bool is_not_enough(string str, string name)
        {
            if (str.Length < LENGTH)
            {
                lbl_message.ForeColor = Color.Red;
                lbl_message.Text = name + " should be at least " + LENGTH + " characters.";
                return true;
            }
            return false;
        }

        private bool is_a_valid_email(string email)
        {
            string[] invalid_ends = { ".", "_", "-", "!", "\"", "é", "'", "^", "+", "%",
                                       "&", "/", "(", ")",  "=", "?", ",", ";", ":", "<",
                                       ">", "|", "`", "#",  "$", "½", "{", "}", "[", "]",
                                       "\\", "ç", "Ç", "~", "ş", "Ş", "ğ", "Ğ", "İ", "ü",
                                       "Ü" , "ö", "Ö", "ı", "æ", "ß", "´", "₺", "€", "@",
                                        " "};

            string[] invalid_chars = { "!", "\"", "é","^", "+", "%","&", "/", "(", ")",
                                       "=", "?", ",", ";", ":", "<",">", "|", "`", "#",
                                       "$", "½", "{", "}", "[", "]","\\","ç", "Ç", "~",
                                       "ş", "Ş", "ğ", "Ğ", "İ", "ü","Ü" ,"ö", "Ö", "ı",
                                       "æ", "ß", "´", "₺", "€", "@", " "};

		string[] invalid_chars_all = {"_", "-", "!", "\"", "é", "'", "^", "+", "%",
                                       	 "&", "/", "(", ")",  "=", "?", ",", ";", ":", "<",
                                         ">", "|", "`", "#",  "$", "½", "{", "}", "[", "]",
                                         "\\", "ç", "Ç", "~", "ş", "Ş", "ğ", "Ğ", "İ", "ü",
                                         "Ü" , "ö", "Ö", "ı", "æ", "ß", "´", "₺", "€", "@",
                                        " "};

            string message = "Please enter a valid email.";
            int index_of_at = email.IndexOf('@');

            // Checking for '@'
            if (index_of_at == -1)
            {
                lbl_message.Text = message;
                return false;
            }

            // Substringing email
            string head_email = email.Substring(0, index_of_at);
            string tail_email = email.Substring(index_of_at + 1, email.Length - index_of_at - 1);

            // Checking for invalid chars
            for (int i = 0; i < invalid_chars.Length; i++)
            {
                if (!(head_email.IndexOf(invalid_chars[i]) == -1))
                {
                    lbl_message.Text = message;
                    return false;
                }
            }
            // Checking for invalid end
            if (head_email.EndsWith("."))
            {
                lbl_message.Text = message;
                return false;
            }


            // Checking for '.' after '@'
            bool contains_dot = false;
            int[] indexes_of_dots = new int[20];

            int j = 0;
            for (int i = 0; i < tail_email.Length; i++)
            {
                if(tail_email[i] == '.')
                {
                    indexes_of_dots[j] = i;
                    j++;
                }
            }

            /*string data = "";

            for (int i = 0; i < indexes_of_dots.GetLength(0); i++)
            {
                data += string.Format("{0,5:d}\n", indexes_of_dots[i]);
            }

            MessageBox.Show(data, "Data");*/


            // Checking for if the dots are next to each other
            for(int i = 1; i < indexes_of_dots.Length; i++)
            {
                int a = indexes_of_dots[i - 1];
                int b = indexes_of_dots[i];

                if(b - a == 1)
                {
                    lbl_message.Text = message;
                    return false;
                }
            }

            // Checking for if there is a dot or starts with dot
            if (indexes_of_dots[0] == 0)
            {
                contains_dot = false;
            }
            else
                contains_dot = true;

            if (!contains_dot)
            {
                lbl_message.Text = message;
                return false;
            }
           
            // Checking for invalid chars - tail email - after dot
            for (int i = 0; i < invalid_chars.Length; i++)
            {
                if (!(tail_email.IndexOf(invalid_chars_all[i]) == -1))
                {
                    lbl_message.Text = message;
                    return false;
                }
            }
            // Checking for invalid ends
            for (int i = 0; i < invalid_ends.Length; i++)
            {
                if (tail_email.EndsWith(invalid_ends[i]))
                {
                    lbl_message.Text = message;
                    return false;
                }
            }
            
            return true;

        }